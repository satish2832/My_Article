@model TechPortalWeb.Models.ArticleModel

<div class="container">
    <section class="article-create">
        <div class="d-flex justify-content-end mt-3">
            <a href="/admin/articles-all" class="btn btn-secondary">Back to Articles</a>
        </div>
        <h2><i class="fa-solid fa-edit"></i> Article Create</h2>
        <hr />
        <div class="row">
            @Html.HiddenFor(model => model.Id, new { @Id = "article-id" })
            @Html.HiddenFor(model => model.ContentFileURL, new { @Id = "article-content-file-url" })
            <!-- Title -->
            <div class="col-md-12 mb-3">
                @Html.LabelFor(model => model.Title, new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", id = "article-title" })
                <span class="text-danger" id="error-title"></span>
            </div>
            <!-- Title URL -->
            <div class="col-md-12 mb-3">
                @Html.LabelFor(model => model.TitleURL, new { @class = "form-label" })
                <button class="btn btn-primary mb-1" id="btnUpdateTitleUrl"><i class="fa fa-refresh" aria-hidden="true"></i></button><span> (This will auto-populate from title)</span>
                @Html.TextBoxFor(model => model.TitleURL, new { @class = "form-control", id = "article-title-url" })
                <span class="text-danger" id="error-title-url"></span>
            </div>
            <!-- Article Type -->
            <div class="col-md-12 mb-3">
                @Html.LabelFor(model => model.ArticleTypeId, "Select Article Type", new { @class = "form-label" })
                @Html.DropDownListFor(
                    model => model.ArticleTypeId,
                    new SelectList(Model.ArticleTypes, "Id", "Name"),
                    "Select an Article Type",
                    new { @class = "form-select", id = "article-type-dropdown" }
                )
                <span class="text-danger" id="error-article-type"></span>
            </div>
            <!-- Content -->
            <div class="col-md-12 mb-3">
                @Html.LabelFor(model => model.Content, new { @class = "form-label" })
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control content", id = "content-editor", rows = 10 })
                <span class="text-danger" id="error-content"></span>
            </div>
            <!-- Images -->
            <div class="col-md-12 mb-3">
                @Html.Label("Images", new { @class = "form-label" })
                <input type="file" id="file-input" class="form-control" multiple accept="image/*" />
                <div class="preview mt-3" id="preview">
                    @{
                        if (Model.ImageUrls != null)
                        {
                            foreach (var image in Model.ImageUrls)
                            {
                                <div class="preview-item existing" data-id="@image.Key">
                                    <img src="@image.Value" alt="Preview" />
                                    <button type="button" class="remove-btn" title="Remove Image">&times;</button>
                                </div>
                            }
                        }
                    }                    
                </div>
                <span class="text-danger" id="error-images"></span>
            </div>
            <!-- Tags -->
            <div class="col-md-12 mb-3">
                @Html.LabelFor(model => model.Tags, "Tags", new { @class = "form-label" })
                <input type="text" id="tags-input" class="form-control" placeholder="Press Enter to add a tag" />
                <div class="tags-container mt-2" id="tags-container"></div>
                @Html.HiddenFor(model => model.Tags, new { id = "tags-hidden" })
                <span class="text-danger" id="error-tags"></span>
            </div>

        </div>
        <!-- Submit Button -->
        <div class="d-flex justify-content-end mt-3">
            <button id="btnCreateArticle" class="btn btn-primary">Create</button>
        </div>
    </section>
</div>

<script>
    $(document).ready(function () {
        $('#content-editor').richText();
        const existingTags = $("#tags-hidden").val();
        tags = existingTags ? existingTags.split(',').map(tag => tag.trim()).filter(tag => tag !== '') : [];

        updateTagsContainer(tags);
    });
</script>
